import numpy as np
import math

def sigmoid(x):
        return 1/(1+math.exp(-x))
    


input=[0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1,] 

n01=[0.05275492379532282, -0.048986194852115666, -0.000912982581611807,
  -0.01010178704225237, 0.0303185945445526, 0.05774467022710264,
  -0.08122808264515302, -0.09433050469559874, 0.06715302078397395,
  -0.013446586418989326, 0.0524560164915884]

n02=[-0.09957878932977787, -0.010922561189039712, 0.044308006468156524,
  -0.054247555745909476, 0.08905413911078447, 0.08028549152229672,
  -0.0938820033932893, -0.09491082780130784, 0.00828249455869931,
  0.08782983255570212, -0.02375915246235752]


b0=[-0.07312715,  0.06948675]

n11=[-0.09419184248502642, -0.055661666745392996]
n12=[-0.012422481269885585, -0.0008375517236298702]
b1=[-0.05668012, -0.01557668]

n2=[-0.053826691691803145, -0.05624379253246228]
b2=[-0.05338311]

a=np.dot(input,n01)+b0[0]
b=np.dot(input,n02)+b0[1]

a=sigmoid(a)
b=sigmoid(b)

c=np.dot([a,b],n11)+b1[0]
d=np.dot([a,b],n12)+b1[1]

c=sigmoid(c)
d=sigmoid(d)

e=np.dot([c,d],n2)+b2[0]

e=sigmoid(e)

print(e)